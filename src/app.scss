/* 1. Include functions first (so you can manipulate colors, SVGs, calc, etc) */
@import "bootstrap/scss/functions";
/* 2. Include any default variable overrides here */
$body-color: $base-color;
$font-family-sans-serif: $body-font-family, sans-serif;
/* 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets) */
@import "bootstrap/scss/variables";
@import "bootstrap/scss/variables-dark";
/* 4. Include any default map overrides here */
/* 5. Include remainder of required parts */
@import "bootstrap/scss/maps";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/root";
/* 6. Optionally include any other parts as needed */
@import "bootstrap/scss/utilities";
@import "bootstrap/scss/reboot";
@import "bootstrap/scss/type";
@import "bootstrap/scss/helpers";
@import "bootstrap/scss/forms";
@import "bootstrap/scss/buttons";
@import "bootstrap/scss/card";
@import "bootstrap/scss/placeholders";
@import "bootstrap/scss/containers";
@import "bootstrap/scss/nav";
@import "bootstrap/scss/navbar";
@import "bootstrap/scss/spinners";
/* 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss` */
@import "bootstrap/scss/utilities/api";
/* Add additional custom code here */

@font-face {
	font-family: $title-font-family;
	src: url("lib/fonts/Righteous-Regular.woff2");
}
@font-face {
	font-family: $body-font-family;
	src: url("lib/fonts/Jost-Regular.woff2") format("woff2 supports variations");
	font-style: normal;
	font-weight: 100 900;
}
@font-face {
	font-family: $body-font-family;
	src: url("lib/fonts/Jost-Italic.woff2") format("woff2 supports variations");
	font-style: italic;
	font-weight: 100 900;
}

@media screen and (min-width: 992px) {
	:root {
		--bs-body-font-size: 1.125rem;
	}
}
@media screen and (min-width: 1200px) {
	:root {
		--bs-body-font-size: 1.25rem;
	}
}
:root {
	--title-font-family: #{$title-font-family}, #{body-font-family}, sans-serif;
	--blue-gradient: linear-gradient(120deg, #9cc6f4 0%, #4187d4 100%);
	--red-gradient: linear-gradient(120deg, #f98081 0%, #ee5354 100%);
	--green-gradient: linear-gradient(120deg, #a5ea99 0%, #58b748 100%);
	--yellow-gradient: linear-gradient(120deg, #fff7b1 0%, #ffef5c 100%);
}
* {
	box-sizing: border-box;
}
html,
body {
	height: 100%;
}
.scroll-container {
	&::-webkit-scrollbar {
		width: 8px; /* Adjust width as desired */
		height: 8px; /* Adjust height as desired */
		background-color: transparent; /* Removes background color */
	}
	/* Style the scrollbar track */
	&::-webkit-scrollbar-track {
		background-color: #f5f5f5; /* Set a light background for the track */
		border-radius: 10px; /* Add rounded corners */
	}

	/* Style the scrollbar thumb */
	&::-webkit-scrollbar-thumb {
		background-color: #cccccc; /* Set a light color for the thumb */
		border-radius: 10px; /* Add rounded corners */
	}

	/* Style the thumb on hover (optional) */
	&::-webkit-scrollbar-thumb:hover {
		background-color: #aaaaaa; /* Change color on hover (optional) */
	}
}
.gradient-box {
	display: flex;
	align-items: center;
	position: relative;
	box-sizing: border-box;
	$border: 1px;
	background-clip: padding-box; /* !importanté */
	border: solid $border transparent; /* !importanté */
	&::before {
		content: "";
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		z-index: -1;
		margin: -$border; /* !importanté */
		border-radius: inherit; /* !importanté */
	}
	&.blue::before {
		background: var(--blue-gradient);
	}
	&.red::before {
		background: var(--red-gradient);
	}
	&.green::before {
		background: var(--green-gradient);
	}
	&.yellow::before {
		background: var(--yellow-gradient);
	}
}
.btn.reset-button {
	width: min(10vw, 60px);
	height: min(10vw, 60px);
	padding: 0.5rem;
	// border-radius: 25%;
	background: var(--blue-gradient);
	border: transparent;
}
